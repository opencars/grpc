// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: proto/core/vehicle.proto

package core

import (
	common "github.com/opencars/grpc/pkg/common"
	operation "github.com/opencars/grpc/pkg/operation"
	registration "github.com/opencars/grpc/pkg/registration"
	vin_decoding "github.com/opencars/grpc/pkg/vin_decoding"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Advertisement_FuelType int32

const (
	Advertisement_FUEL_UNKNOWN      Advertisement_FuelType = 0
	Advertisement_FUEL_GASOLINE     Advertisement_FuelType = 1
	Advertisement_FUEL_DIESEL       Advertisement_FuelType = 2
	Advertisement_FUEL_GAS          Advertisement_FuelType = 3
	Advertisement_FUEL_GAS_GASOLINE Advertisement_FuelType = 4
	Advertisement_FUEL_HYBRID       Advertisement_FuelType = 5
	Advertisement_FUEL_ELECTRIC     Advertisement_FuelType = 6
	Advertisement_FUEL_PROPANE      Advertisement_FuelType = 7
	Advertisement_FUEL_METHANE      Advertisement_FuelType = 8
	Advertisement_FUEL_OTHER        Advertisement_FuelType = 9
)

// Enum value maps for Advertisement_FuelType.
var (
	Advertisement_FuelType_name = map[int32]string{
		0: "FUEL_UNKNOWN",
		1: "FUEL_GASOLINE",
		2: "FUEL_DIESEL",
		3: "FUEL_GAS",
		4: "FUEL_GAS_GASOLINE",
		5: "FUEL_HYBRID",
		6: "FUEL_ELECTRIC",
		7: "FUEL_PROPANE",
		8: "FUEL_METHANE",
		9: "FUEL_OTHER",
	}
	Advertisement_FuelType_value = map[string]int32{
		"FUEL_UNKNOWN":      0,
		"FUEL_GASOLINE":     1,
		"FUEL_DIESEL":       2,
		"FUEL_GAS":          3,
		"FUEL_GAS_GASOLINE": 4,
		"FUEL_HYBRID":       5,
		"FUEL_ELECTRIC":     6,
		"FUEL_PROPANE":      7,
		"FUEL_METHANE":      8,
		"FUEL_OTHER":        9,
	}
)

func (x Advertisement_FuelType) Enum() *Advertisement_FuelType {
	p := new(Advertisement_FuelType)
	*p = x
	return p
}

func (x Advertisement_FuelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_FuelType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_core_vehicle_proto_enumTypes[0].Descriptor()
}

func (Advertisement_FuelType) Type() protoreflect.EnumType {
	return &file_proto_core_vehicle_proto_enumTypes[0]
}

func (x Advertisement_FuelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_FuelType.Descriptor instead.
func (Advertisement_FuelType) EnumDescriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{5, 0}
}

type Advertisement_GearboxType int32

const (
	Advertisement_GEARBOX_UKNOWN    Advertisement_GearboxType = 0
	Advertisement_GEARBOX_AUTOMATIC Advertisement_GearboxType = 1
	Advertisement_GEARBOX_MANUAL    Advertisement_GearboxType = 2
	Advertisement_GEARBOX_MANUMATIC Advertisement_GearboxType = 3
	Advertisement_GEARBOX_VARIATOR  Advertisement_GearboxType = 4
	Advertisement_GEARBOX_AMT       Advertisement_GearboxType = 5
	Advertisement_GEARBOX_OTHER     Advertisement_GearboxType = 6
)

// Enum value maps for Advertisement_GearboxType.
var (
	Advertisement_GearboxType_name = map[int32]string{
		0: "GEARBOX_UKNOWN",
		1: "GEARBOX_AUTOMATIC",
		2: "GEARBOX_MANUAL",
		3: "GEARBOX_MANUMATIC",
		4: "GEARBOX_VARIATOR",
		5: "GEARBOX_AMT",
		6: "GEARBOX_OTHER",
	}
	Advertisement_GearboxType_value = map[string]int32{
		"GEARBOX_UKNOWN":    0,
		"GEARBOX_AUTOMATIC": 1,
		"GEARBOX_MANUAL":    2,
		"GEARBOX_MANUMATIC": 3,
		"GEARBOX_VARIATOR":  4,
		"GEARBOX_AMT":       5,
		"GEARBOX_OTHER":     6,
	}
)

func (x Advertisement_GearboxType) Enum() *Advertisement_GearboxType {
	p := new(Advertisement_GearboxType)
	*p = x
	return p
}

func (x Advertisement_GearboxType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_GearboxType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_core_vehicle_proto_enumTypes[1].Descriptor()
}

func (Advertisement_GearboxType) Type() protoreflect.EnumType {
	return &file_proto_core_vehicle_proto_enumTypes[1]
}

func (x Advertisement_GearboxType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_GearboxType.Descriptor instead.
func (Advertisement_GearboxType) EnumDescriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{5, 1}
}

type Advertisement_WheelDriveType int32

const (
	Advertisement_WHEELDRIVE_UNKNOWN Advertisement_WheelDriveType = 0
	Advertisement_WHEELDRIVE_REAR    Advertisement_WheelDriveType = 1
	Advertisement_WHEELDRIVE_FRONT   Advertisement_WheelDriveType = 2
	Advertisement_WHEELDRIVE_ALL     Advertisement_WheelDriveType = 3
)

// Enum value maps for Advertisement_WheelDriveType.
var (
	Advertisement_WheelDriveType_name = map[int32]string{
		0: "WHEELDRIVE_UNKNOWN",
		1: "WHEELDRIVE_REAR",
		2: "WHEELDRIVE_FRONT",
		3: "WHEELDRIVE_ALL",
	}
	Advertisement_WheelDriveType_value = map[string]int32{
		"WHEELDRIVE_UNKNOWN": 0,
		"WHEELDRIVE_REAR":    1,
		"WHEELDRIVE_FRONT":   2,
		"WHEELDRIVE_ALL":     3,
	}
)

func (x Advertisement_WheelDriveType) Enum() *Advertisement_WheelDriveType {
	p := new(Advertisement_WheelDriveType)
	*p = x
	return p
}

func (x Advertisement_WheelDriveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_WheelDriveType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_core_vehicle_proto_enumTypes[2].Descriptor()
}

func (Advertisement_WheelDriveType) Type() protoreflect.EnumType {
	return &file_proto_core_vehicle_proto_enumTypes[2]
}

func (x Advertisement_WheelDriveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_WheelDriveType.Descriptor instead.
func (Advertisement_WheelDriveType) EnumDescriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{5, 2}
}

type Advertisement_Category int32

const (
	Advertisement_CATEGORY_UNKNOWN Advertisement_Category = 0
	Advertisement_CATEGORY_CAR     Advertisement_Category = 1
	Advertisement_CATEGORY_TRUCK   Advertisement_Category = 2
	Advertisement_CATEGORY_MOTO    Advertisement_Category = 3
	Advertisement_CATEGORY_BUS     Advertisement_Category = 4
	Advertisement_CATEGORY_WATER   Advertisement_Category = 5
	Advertisement_CATEGORY_AIR     Advertisement_Category = 6
	Advertisement_CATEGORY_CAMPER  Advertisement_Category = 7
	Advertisement_CATEGORY_TRAILER Advertisement_Category = 8
	Advertisement_CATEGORY_SPECIAL Advertisement_Category = 9
)

// Enum value maps for Advertisement_Category.
var (
	Advertisement_Category_name = map[int32]string{
		0: "CATEGORY_UNKNOWN",
		1: "CATEGORY_CAR",
		2: "CATEGORY_TRUCK",
		3: "CATEGORY_MOTO",
		4: "CATEGORY_BUS",
		5: "CATEGORY_WATER",
		6: "CATEGORY_AIR",
		7: "CATEGORY_CAMPER",
		8: "CATEGORY_TRAILER",
		9: "CATEGORY_SPECIAL",
	}
	Advertisement_Category_value = map[string]int32{
		"CATEGORY_UNKNOWN": 0,
		"CATEGORY_CAR":     1,
		"CATEGORY_TRUCK":   2,
		"CATEGORY_MOTO":    3,
		"CATEGORY_BUS":     4,
		"CATEGORY_WATER":   5,
		"CATEGORY_AIR":     6,
		"CATEGORY_CAMPER":  7,
		"CATEGORY_TRAILER": 8,
		"CATEGORY_SPECIAL": 9,
	}
)

func (x Advertisement_Category) Enum() *Advertisement_Category {
	p := new(Advertisement_Category)
	*p = x
	return p
}

func (x Advertisement_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_core_vehicle_proto_enumTypes[3].Descriptor()
}

func (Advertisement_Category) Type() protoreflect.EnumType {
	return &file_proto_core_vehicle_proto_enumTypes[3]
}

func (x Advertisement_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_Category.Descriptor instead.
func (Advertisement_Category) EnumDescriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{5, 3}
}

type Advertisement_BodyType int32

const (
	Advertisement_BODY_UNKNOWN     Advertisement_BodyType = 0
	Advertisement_BODY_SEDAN       Advertisement_BodyType = 1
	Advertisement_BODY_CROSSOVER   Advertisement_BodyType = 2
	Advertisement_BODY_MINIVAN     Advertisement_BodyType = 3
	Advertisement_BODY_HATCHBACK   Advertisement_BodyType = 4
	Advertisement_BODY_WAGON       Advertisement_BodyType = 5
	Advertisement_BODY_COUPE       Advertisement_BodyType = 6
	Advertisement_BODY_CONVERTIBLE Advertisement_BodyType = 7
	Advertisement_BODY_PICKUP      Advertisement_BodyType = 8
	Advertisement_BODY_LIMOUSINE   Advertisement_BodyType = 9
	Advertisement_BODY_LIGHTTRUCK  Advertisement_BodyType = 10
	Advertisement_BODY_OTHER       Advertisement_BodyType = 11
)

// Enum value maps for Advertisement_BodyType.
var (
	Advertisement_BodyType_name = map[int32]string{
		0:  "BODY_UNKNOWN",
		1:  "BODY_SEDAN",
		2:  "BODY_CROSSOVER",
		3:  "BODY_MINIVAN",
		4:  "BODY_HATCHBACK",
		5:  "BODY_WAGON",
		6:  "BODY_COUPE",
		7:  "BODY_CONVERTIBLE",
		8:  "BODY_PICKUP",
		9:  "BODY_LIMOUSINE",
		10: "BODY_LIGHTTRUCK",
		11: "BODY_OTHER",
	}
	Advertisement_BodyType_value = map[string]int32{
		"BODY_UNKNOWN":     0,
		"BODY_SEDAN":       1,
		"BODY_CROSSOVER":   2,
		"BODY_MINIVAN":     3,
		"BODY_HATCHBACK":   4,
		"BODY_WAGON":       5,
		"BODY_COUPE":       6,
		"BODY_CONVERTIBLE": 7,
		"BODY_PICKUP":      8,
		"BODY_LIMOUSINE":   9,
		"BODY_LIGHTTRUCK":  10,
		"BODY_OTHER":       11,
	}
)

func (x Advertisement_BodyType) Enum() *Advertisement_BodyType {
	p := new(Advertisement_BodyType)
	*p = x
	return p
}

func (x Advertisement_BodyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_BodyType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_core_vehicle_proto_enumTypes[4].Descriptor()
}

func (Advertisement_BodyType) Type() protoreflect.EnumType {
	return &file_proto_core_vehicle_proto_enumTypes[4]
}

func (x Advertisement_BodyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_BodyType.Descriptor instead.
func (Advertisement_BodyType) EnumDescriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{5, 4}
}

type NumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *NumberRequest) Reset() {
	*x = NumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_core_vehicle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberRequest) ProtoMessage() {}

func (x *NumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_core_vehicle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberRequest.ProtoReflect.Descriptor instead.
func (*NumberRequest) Descriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{0}
}

func (x *NumberRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

type VINRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vin string `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
}

func (x *VINRequest) Reset() {
	*x = VINRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_core_vehicle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VINRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VINRequest) ProtoMessage() {}

func (x *VINRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_core_vehicle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VINRequest.ProtoReflect.Descriptor instead.
func (*VINRequest) Descriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{1}
}

func (x *VINRequest) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

type Vin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value      string                   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Vehicle    *vin_decoding.Vehicle    `protobuf:"bytes,2,opt,name=vehicle,proto3" json:"vehicle,omitempty"`
	DecodedVin *vin_decoding.DecodedVIN `protobuf:"bytes,3,opt,name=decoded_vin,json=decodedVin,proto3" json:"decoded_vin,omitempty"`
}

func (x *Vin) Reset() {
	*x = Vin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_core_vehicle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vin) ProtoMessage() {}

func (x *Vin) ProtoReflect() protoreflect.Message {
	mi := &file_proto_core_vehicle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vin.ProtoReflect.Descriptor instead.
func (*Vin) Descriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{2}
}

func (x *Vin) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Vin) GetVehicle() *vin_decoding.Vehicle {
	if x != nil {
		return x.Vehicle
	}
	return nil
}

func (x *Vin) GetDecodedVin() *vin_decoding.DecodedVIN {
	if x != nil {
		return x.DecodedVin
	}
	return nil
}

type Vehicle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vin            *Vin                   `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	FirstRegDate   *common.Date           `protobuf:"bytes,2,opt,name=first_reg_date,json=firstRegDate,proto3" json:"first_reg_date,omitempty"`
	Brand          string                 `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	Model          string                 `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Year           int32                  `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty"`
	Registrations  []*registration.Record `protobuf:"bytes,6,rep,name=registrations,proto3" json:"registrations,omitempty"`
	Operations     []*operation.Record    `protobuf:"bytes,7,rep,name=operations,proto3" json:"operations,omitempty"`
	Advertisements []*Advertisement       `protobuf:"bytes,8,rep,name=advertisements,proto3" json:"advertisements,omitempty"`
}

func (x *Vehicle) Reset() {
	*x = Vehicle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_core_vehicle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vehicle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vehicle) ProtoMessage() {}

func (x *Vehicle) ProtoReflect() protoreflect.Message {
	mi := &file_proto_core_vehicle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vehicle.ProtoReflect.Descriptor instead.
func (*Vehicle) Descriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{3}
}

func (x *Vehicle) GetVin() *Vin {
	if x != nil {
		return x.Vin
	}
	return nil
}

func (x *Vehicle) GetFirstRegDate() *common.Date {
	if x != nil {
		return x.FirstRegDate
	}
	return nil
}

func (x *Vehicle) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Vehicle) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Vehicle) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Vehicle) GetRegistrations() []*registration.Record {
	if x != nil {
		return x.Registrations
	}
	return nil
}

func (x *Vehicle) GetOperations() []*operation.Record {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *Vehicle) GetAdvertisements() []*Advertisement {
	if x != nil {
		return x.Advertisements
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vehicles []*Vehicle `protobuf:"bytes,1,rep,name=vehicles,proto3" json:"vehicles,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_core_vehicle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_core_vehicle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{4}
}

func (x *Result) GetVehicles() []*Vehicle {
	if x != nil {
		return x.Vehicles
	}
	return nil
}

type Advertisement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     uint32                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource               string                       `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Brand                  string                       `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	Model                  string                       `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Category               Advertisement_Category       `protobuf:"varint,5,opt,name=category,proto3,enum=core.Advertisement_Category" json:"category,omitempty"`
	Title                  string                       `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	IsVerified             bool                         `protobuf:"varint,7,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	Url                    string                       `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	Price                  uint32                       `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	ImageUrls              []string                     `protobuf:"bytes,10,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	LastSeenAt             uint32                       `protobuf:"varint,11,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	PublishedAt            uint32                       `protobuf:"varint,12,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	ScrapedAt              uint32                       `protobuf:"varint,13,opt,name=scraped_at,json=scrapedAt,proto3" json:"scraped_at,omitempty"`
	UpdatedAt              uint32                       `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Year                   uint32                       `protobuf:"varint,15,opt,name=year,proto3" json:"year,omitempty"`
	Gearbox                Advertisement_GearboxType    `protobuf:"varint,16,opt,name=gearbox,proto3,enum=core.Advertisement_GearboxType" json:"gearbox,omitempty"`
	WheelDrive             Advertisement_WheelDriveType `protobuf:"varint,17,opt,name=wheel_drive,json=wheelDrive,proto3,enum=core.Advertisement_WheelDriveType" json:"wheel_drive,omitempty"`
	EngineCapacity         float64                      `protobuf:"fixed64,18,opt,name=engine_capacity,json=engineCapacity,proto3" json:"engine_capacity,omitempty"`
	Fuel                   Advertisement_FuelType       `protobuf:"varint,19,opt,name=fuel,proto3,enum=core.Advertisement_FuelType" json:"fuel,omitempty"`
	Mileage                uint32                       `protobuf:"varint,20,opt,name=mileage,proto3" json:"mileage,omitempty"`
	Body                   Advertisement_BodyType       `protobuf:"varint,21,opt,name=body,proto3,enum=core.Advertisement_BodyType" json:"body,omitempty"`
	IsCustomsCleared       bool                         `protobuf:"varint,22,opt,name=is_customs_cleared,json=isCustomsCleared,proto3" json:"is_customs_cleared,omitempty"`
	Vin                    string                       `protobuf:"bytes,23,opt,name=vin,proto3" json:"vin,omitempty"`
	RegistrationNumberPage string                       `protobuf:"bytes,24,opt,name=registration_number_page,json=registrationNumberPage,proto3" json:"registration_number_page,omitempty"`
	IdOnResource           uint32                       `protobuf:"varint,25,opt,name=id_on_resource,json=idOnResource,proto3" json:"id_on_resource,omitempty"`
}

func (x *Advertisement) Reset() {
	*x = Advertisement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_core_vehicle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Advertisement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Advertisement) ProtoMessage() {}

func (x *Advertisement) ProtoReflect() protoreflect.Message {
	mi := &file_proto_core_vehicle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Advertisement.ProtoReflect.Descriptor instead.
func (*Advertisement) Descriptor() ([]byte, []int) {
	return file_proto_core_vehicle_proto_rawDescGZIP(), []int{5}
}

func (x *Advertisement) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Advertisement) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Advertisement) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Advertisement) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Advertisement) GetCategory() Advertisement_Category {
	if x != nil {
		return x.Category
	}
	return Advertisement_CATEGORY_UNKNOWN
}

func (x *Advertisement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Advertisement) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Advertisement) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Advertisement) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Advertisement) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

func (x *Advertisement) GetLastSeenAt() uint32 {
	if x != nil {
		return x.LastSeenAt
	}
	return 0
}

func (x *Advertisement) GetPublishedAt() uint32 {
	if x != nil {
		return x.PublishedAt
	}
	return 0
}

func (x *Advertisement) GetScrapedAt() uint32 {
	if x != nil {
		return x.ScrapedAt
	}
	return 0
}

func (x *Advertisement) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Advertisement) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Advertisement) GetGearbox() Advertisement_GearboxType {
	if x != nil {
		return x.Gearbox
	}
	return Advertisement_GEARBOX_UKNOWN
}

func (x *Advertisement) GetWheelDrive() Advertisement_WheelDriveType {
	if x != nil {
		return x.WheelDrive
	}
	return Advertisement_WHEELDRIVE_UNKNOWN
}

func (x *Advertisement) GetEngineCapacity() float64 {
	if x != nil {
		return x.EngineCapacity
	}
	return 0
}

func (x *Advertisement) GetFuel() Advertisement_FuelType {
	if x != nil {
		return x.Fuel
	}
	return Advertisement_FUEL_UNKNOWN
}

func (x *Advertisement) GetMileage() uint32 {
	if x != nil {
		return x.Mileage
	}
	return 0
}

func (x *Advertisement) GetBody() Advertisement_BodyType {
	if x != nil {
		return x.Body
	}
	return Advertisement_BODY_UNKNOWN
}

func (x *Advertisement) GetIsCustomsCleared() bool {
	if x != nil {
		return x.IsCustomsCleared
	}
	return false
}

func (x *Advertisement) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *Advertisement) GetRegistrationNumberPage() string {
	if x != nil {
		return x.RegistrationNumberPage
	}
	return ""
}

func (x *Advertisement) GetIdOnResource() uint32 {
	if x != nil {
		return x.IdOnResource
	}
	return 0
}

var File_proto_core_vehicle_proto protoreflect.FileDescriptor

var file_proto_core_vehicle_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x65, 0x68,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6f, 0x72, 0x65,
	0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x63,
	0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0d, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0x1e, 0x0a, 0x0a, 0x56, 0x49, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69,
	0x6e, 0x22, 0x87, 0x01, 0x0a, 0x03, 0x56, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x2f, 0x0a, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x76, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x2e,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x56, 0x49, 0x4e, 0x52,
	0x0a, 0x64, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x56, 0x69, 0x6e, 0x22, 0xc6, 0x02, 0x0a, 0x07,
	0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x69, 0x6e, 0x52,
	0x03, 0x76, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x0e, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x52, 0x65, 0x67, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x3a, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29,
	0x0a, 0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x08, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x84, 0x0e, 0x0a, 0x0d, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x12, 0x39, 0x0a, 0x07, 0x67, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x78, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x78,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x67, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x78, 0x12, 0x43, 0x0a,
	0x0b, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x66,
	0x75, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46,
	0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x66, 0x75, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x64, 0x4f,
	0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x08, 0x46, 0x75,
	0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x55, 0x45, 0x4c,
	0x5f, 0x47, 0x41, 0x53, 0x4f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x46,
	0x55, 0x45, 0x4c, 0x5f, 0x44, 0x49, 0x45, 0x53, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x55, 0x45, 0x4c, 0x5f, 0x47, 0x41, 0x53, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x55,
	0x45, 0x4c, 0x5f, 0x47, 0x41, 0x53, 0x5f, 0x47, 0x41, 0x53, 0x4f, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49, 0x44,
	0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x45, 0x4c, 0x45, 0x43, 0x54,
	0x52, 0x49, 0x43, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x50, 0x52,
	0x4f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x55, 0x45, 0x4c, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x41, 0x4e, 0x45, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x55, 0x45,
	0x4c, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x09, 0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x47, 0x65,
	0x61, 0x72, 0x62, 0x6f, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x41,
	0x52, 0x42, 0x4f, 0x58, 0x5f, 0x55, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x4d, 0x41, 0x54,
	0x49, 0x43, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f,
	0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x41, 0x52,
	0x42, 0x4f, 0x58, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x10, 0x03, 0x12,
	0x14, 0x0a, 0x10, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41,
	0x54, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58,
	0x5f, 0x41, 0x4d, 0x54, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f,
	0x58, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x06, 0x22, 0x67, 0x0a, 0x0e, 0x57, 0x68, 0x65,
	0x65, 0x6c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x57,
	0x48, 0x45, 0x45, 0x4c, 0x44, 0x52, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x44, 0x52, 0x49, 0x56,
	0x45, 0x5f, 0x52, 0x45, 0x41, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x48, 0x45, 0x45,
	0x4c, 0x44, 0x52, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x44, 0x52, 0x49, 0x56, 0x45, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x03, 0x22, 0xd2, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x43, 0x41, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x41, 0x54, 0x45, 0x47,
	0x4f, 0x52, 0x59, 0x5f, 0x54, 0x52, 0x55, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x54, 0x4f, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x55, 0x53, 0x10, 0x04,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x57, 0x41, 0x54,
	0x45, 0x52, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x41, 0x49, 0x52, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f,
	0x52, 0x59, 0x5f, 0x43, 0x41, 0x4d, 0x50, 0x45, 0x52, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x4c, 0x45, 0x52, 0x10,
	0x08, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x09, 0x22, 0xe6, 0x01, 0x0a, 0x08, 0x42, 0x6f, 0x64, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x53,
	0x45, 0x44, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x43,
	0x52, 0x4f, 0x53, 0x53, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f,
	0x44, 0x59, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x56, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x4f, 0x44, 0x59, 0x5f, 0x48, 0x41, 0x54, 0x43, 0x48, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x04,
	0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x57, 0x41, 0x47, 0x4f, 0x4e, 0x10, 0x05,
	0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x50, 0x45, 0x10, 0x06,
	0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x54,
	0x49, 0x42, 0x4c, 0x45, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x50,
	0x49, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x44, 0x59, 0x5f,
	0x4c, 0x49, 0x4d, 0x4f, 0x55, 0x53, 0x49, 0x4e, 0x45, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x42,
	0x4f, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x54, 0x52, 0x55, 0x43, 0x4b, 0x10, 0x0a,
	0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0b,
	0x32, 0x74, 0x0a, 0x0e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x56, 0x49, 0x4e, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x49, 0x4e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_core_vehicle_proto_rawDescOnce sync.Once
	file_proto_core_vehicle_proto_rawDescData = file_proto_core_vehicle_proto_rawDesc
)

func file_proto_core_vehicle_proto_rawDescGZIP() []byte {
	file_proto_core_vehicle_proto_rawDescOnce.Do(func() {
		file_proto_core_vehicle_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_core_vehicle_proto_rawDescData)
	})
	return file_proto_core_vehicle_proto_rawDescData
}

var file_proto_core_vehicle_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_core_vehicle_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_core_vehicle_proto_goTypes = []interface{}{
	(Advertisement_FuelType)(0),       // 0: core.Advertisement.FuelType
	(Advertisement_GearboxType)(0),    // 1: core.Advertisement.GearboxType
	(Advertisement_WheelDriveType)(0), // 2: core.Advertisement.WheelDriveType
	(Advertisement_Category)(0),       // 3: core.Advertisement.Category
	(Advertisement_BodyType)(0),       // 4: core.Advertisement.BodyType
	(*NumberRequest)(nil),             // 5: core.NumberRequest
	(*VINRequest)(nil),                // 6: core.VINRequest
	(*Vin)(nil),                       // 7: core.Vin
	(*Vehicle)(nil),                   // 8: core.Vehicle
	(*Result)(nil),                    // 9: core.Result
	(*Advertisement)(nil),             // 10: core.Advertisement
	(*vin_decoding.Vehicle)(nil),      // 11: vin_decoding.Vehicle
	(*vin_decoding.DecodedVIN)(nil),   // 12: vin_decoding.DecodedVIN
	(*common.Date)(nil),               // 13: common.Date
	(*registration.Record)(nil),       // 14: registration.Record
	(*operation.Record)(nil),          // 15: operation.Record
}
var file_proto_core_vehicle_proto_depIdxs = []int32{
	11, // 0: core.Vin.vehicle:type_name -> vin_decoding.Vehicle
	12, // 1: core.Vin.decoded_vin:type_name -> vin_decoding.DecodedVIN
	7,  // 2: core.Vehicle.vin:type_name -> core.Vin
	13, // 3: core.Vehicle.first_reg_date:type_name -> common.Date
	14, // 4: core.Vehicle.registrations:type_name -> registration.Record
	15, // 5: core.Vehicle.operations:type_name -> operation.Record
	10, // 6: core.Vehicle.advertisements:type_name -> core.Advertisement
	8,  // 7: core.Result.vehicles:type_name -> core.Vehicle
	3,  // 8: core.Advertisement.category:type_name -> core.Advertisement.Category
	1,  // 9: core.Advertisement.gearbox:type_name -> core.Advertisement.GearboxType
	2,  // 10: core.Advertisement.wheel_drive:type_name -> core.Advertisement.WheelDriveType
	0,  // 11: core.Advertisement.fuel:type_name -> core.Advertisement.FuelType
	4,  // 12: core.Advertisement.body:type_name -> core.Advertisement.BodyType
	5,  // 13: core.VehicleService.FindByNumber:input_type -> core.NumberRequest
	6,  // 14: core.VehicleService.FindByVIN:input_type -> core.VINRequest
	9,  // 15: core.VehicleService.FindByNumber:output_type -> core.Result
	9,  // 16: core.VehicleService.FindByVIN:output_type -> core.Result
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_core_vehicle_proto_init() }
func file_proto_core_vehicle_proto_init() {
	if File_proto_core_vehicle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_core_vehicle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_core_vehicle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VINRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_core_vehicle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_core_vehicle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vehicle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_core_vehicle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_core_vehicle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Advertisement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_core_vehicle_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_core_vehicle_proto_goTypes,
		DependencyIndexes: file_proto_core_vehicle_proto_depIdxs,
		EnumInfos:         file_proto_core_vehicle_proto_enumTypes,
		MessageInfos:      file_proto_core_vehicle_proto_msgTypes,
	}.Build()
	File_proto_core_vehicle_proto = out.File
	file_proto_core_vehicle_proto_rawDesc = nil
	file_proto_core_vehicle_proto_goTypes = nil
	file_proto_core_vehicle_proto_depIdxs = nil
}
