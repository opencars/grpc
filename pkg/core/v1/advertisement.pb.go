// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: core/v1/advertisement.proto

package corev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Advertisement_Fuel int32

const (
	Advertisement_FUEL_UNKNOWN      Advertisement_Fuel = 0
	Advertisement_FUEL_GASOLINE     Advertisement_Fuel = 1
	Advertisement_FUEL_DIESEL       Advertisement_Fuel = 2
	Advertisement_FUEL_GAS          Advertisement_Fuel = 3
	Advertisement_FUEL_GAS_GASOLINE Advertisement_Fuel = 4
	Advertisement_FUEL_HYBRID       Advertisement_Fuel = 5
	Advertisement_FUEL_ELECTRIC     Advertisement_Fuel = 6
	Advertisement_FUEL_PROPANE      Advertisement_Fuel = 7
	Advertisement_FUEL_METHANE      Advertisement_Fuel = 8
	Advertisement_FUEL_OTHER        Advertisement_Fuel = 9
)

// Enum value maps for Advertisement_Fuel.
var (
	Advertisement_Fuel_name = map[int32]string{
		0: "FUEL_UNKNOWN",
		1: "FUEL_GASOLINE",
		2: "FUEL_DIESEL",
		3: "FUEL_GAS",
		4: "FUEL_GAS_GASOLINE",
		5: "FUEL_HYBRID",
		6: "FUEL_ELECTRIC",
		7: "FUEL_PROPANE",
		8: "FUEL_METHANE",
		9: "FUEL_OTHER",
	}
	Advertisement_Fuel_value = map[string]int32{
		"FUEL_UNKNOWN":      0,
		"FUEL_GASOLINE":     1,
		"FUEL_DIESEL":       2,
		"FUEL_GAS":          3,
		"FUEL_GAS_GASOLINE": 4,
		"FUEL_HYBRID":       5,
		"FUEL_ELECTRIC":     6,
		"FUEL_PROPANE":      7,
		"FUEL_METHANE":      8,
		"FUEL_OTHER":        9,
	}
)

func (x Advertisement_Fuel) Enum() *Advertisement_Fuel {
	p := new(Advertisement_Fuel)
	*p = x
	return p
}

func (x Advertisement_Fuel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_Fuel) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_advertisement_proto_enumTypes[0].Descriptor()
}

func (Advertisement_Fuel) Type() protoreflect.EnumType {
	return &file_core_v1_advertisement_proto_enumTypes[0]
}

func (x Advertisement_Fuel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_Fuel.Descriptor instead.
func (Advertisement_Fuel) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_advertisement_proto_rawDescGZIP(), []int{0, 0}
}

type Advertisement_Gearbox int32

const (
	Advertisement_GEARBOX_UNKNOWN   Advertisement_Gearbox = 0
	Advertisement_GEARBOX_AUTOMATIC Advertisement_Gearbox = 1
	Advertisement_GEARBOX_MANUAL    Advertisement_Gearbox = 2
	Advertisement_GEARBOX_MANUMATIC Advertisement_Gearbox = 3
	Advertisement_GEARBOX_VARIATOR  Advertisement_Gearbox = 4
	Advertisement_GEARBOX_AMT       Advertisement_Gearbox = 5
	Advertisement_GEARBOX_OTHER     Advertisement_Gearbox = 6
)

// Enum value maps for Advertisement_Gearbox.
var (
	Advertisement_Gearbox_name = map[int32]string{
		0: "GEARBOX_UNKNOWN",
		1: "GEARBOX_AUTOMATIC",
		2: "GEARBOX_MANUAL",
		3: "GEARBOX_MANUMATIC",
		4: "GEARBOX_VARIATOR",
		5: "GEARBOX_AMT",
		6: "GEARBOX_OTHER",
	}
	Advertisement_Gearbox_value = map[string]int32{
		"GEARBOX_UNKNOWN":   0,
		"GEARBOX_AUTOMATIC": 1,
		"GEARBOX_MANUAL":    2,
		"GEARBOX_MANUMATIC": 3,
		"GEARBOX_VARIATOR":  4,
		"GEARBOX_AMT":       5,
		"GEARBOX_OTHER":     6,
	}
)

func (x Advertisement_Gearbox) Enum() *Advertisement_Gearbox {
	p := new(Advertisement_Gearbox)
	*p = x
	return p
}

func (x Advertisement_Gearbox) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_Gearbox) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_advertisement_proto_enumTypes[1].Descriptor()
}

func (Advertisement_Gearbox) Type() protoreflect.EnumType {
	return &file_core_v1_advertisement_proto_enumTypes[1]
}

func (x Advertisement_Gearbox) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_Gearbox.Descriptor instead.
func (Advertisement_Gearbox) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_advertisement_proto_rawDescGZIP(), []int{0, 1}
}

type Advertisement_WheelDrive int32

const (
	Advertisement_WHEEL_DRIVE_UNKNOWN Advertisement_WheelDrive = 0
	Advertisement_WHEEL_DRIVE_REAR    Advertisement_WheelDrive = 1
	Advertisement_WHEEL_DRIVE_FRONT   Advertisement_WheelDrive = 2
	Advertisement_WHEEL_DRIVE_ALL     Advertisement_WheelDrive = 3
)

// Enum value maps for Advertisement_WheelDrive.
var (
	Advertisement_WheelDrive_name = map[int32]string{
		0: "WHEEL_DRIVE_UNKNOWN",
		1: "WHEEL_DRIVE_REAR",
		2: "WHEEL_DRIVE_FRONT",
		3: "WHEEL_DRIVE_ALL",
	}
	Advertisement_WheelDrive_value = map[string]int32{
		"WHEEL_DRIVE_UNKNOWN": 0,
		"WHEEL_DRIVE_REAR":    1,
		"WHEEL_DRIVE_FRONT":   2,
		"WHEEL_DRIVE_ALL":     3,
	}
)

func (x Advertisement_WheelDrive) Enum() *Advertisement_WheelDrive {
	p := new(Advertisement_WheelDrive)
	*p = x
	return p
}

func (x Advertisement_WheelDrive) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_WheelDrive) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_advertisement_proto_enumTypes[2].Descriptor()
}

func (Advertisement_WheelDrive) Type() protoreflect.EnumType {
	return &file_core_v1_advertisement_proto_enumTypes[2]
}

func (x Advertisement_WheelDrive) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_WheelDrive.Descriptor instead.
func (Advertisement_WheelDrive) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_advertisement_proto_rawDescGZIP(), []int{0, 2}
}

type Advertisement_Category int32

const (
	Advertisement_CATEGORY_UNKNOWN Advertisement_Category = 0
	Advertisement_CATEGORY_CAR     Advertisement_Category = 1
	Advertisement_CATEGORY_TRUCK   Advertisement_Category = 2
	Advertisement_CATEGORY_MOTO    Advertisement_Category = 3
	Advertisement_CATEGORY_BUS     Advertisement_Category = 4
	Advertisement_CATEGORY_WATER   Advertisement_Category = 5
	Advertisement_CATEGORY_AIR     Advertisement_Category = 6
	Advertisement_CATEGORY_CAMPER  Advertisement_Category = 7
	Advertisement_CATEGORY_TRAILER Advertisement_Category = 8
	Advertisement_CATEGORY_SPECIAL Advertisement_Category = 9
)

// Enum value maps for Advertisement_Category.
var (
	Advertisement_Category_name = map[int32]string{
		0: "CATEGORY_UNKNOWN",
		1: "CATEGORY_CAR",
		2: "CATEGORY_TRUCK",
		3: "CATEGORY_MOTO",
		4: "CATEGORY_BUS",
		5: "CATEGORY_WATER",
		6: "CATEGORY_AIR",
		7: "CATEGORY_CAMPER",
		8: "CATEGORY_TRAILER",
		9: "CATEGORY_SPECIAL",
	}
	Advertisement_Category_value = map[string]int32{
		"CATEGORY_UNKNOWN": 0,
		"CATEGORY_CAR":     1,
		"CATEGORY_TRUCK":   2,
		"CATEGORY_MOTO":    3,
		"CATEGORY_BUS":     4,
		"CATEGORY_WATER":   5,
		"CATEGORY_AIR":     6,
		"CATEGORY_CAMPER":  7,
		"CATEGORY_TRAILER": 8,
		"CATEGORY_SPECIAL": 9,
	}
)

func (x Advertisement_Category) Enum() *Advertisement_Category {
	p := new(Advertisement_Category)
	*p = x
	return p
}

func (x Advertisement_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_advertisement_proto_enumTypes[3].Descriptor()
}

func (Advertisement_Category) Type() protoreflect.EnumType {
	return &file_core_v1_advertisement_proto_enumTypes[3]
}

func (x Advertisement_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_Category.Descriptor instead.
func (Advertisement_Category) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_advertisement_proto_rawDescGZIP(), []int{0, 3}
}

type Advertisement_Body int32

const (
	Advertisement_BODY_UNKNOWN     Advertisement_Body = 0
	Advertisement_BODY_SEDAN       Advertisement_Body = 1
	Advertisement_BODY_CROSSOVER   Advertisement_Body = 2
	Advertisement_BODY_MINIVAN     Advertisement_Body = 3
	Advertisement_BODY_HATCHBACK   Advertisement_Body = 4
	Advertisement_BODY_WAGON       Advertisement_Body = 5
	Advertisement_BODY_COUPE       Advertisement_Body = 6
	Advertisement_BODY_CONVERTIBLE Advertisement_Body = 7
	Advertisement_BODY_PICKUP      Advertisement_Body = 8
	Advertisement_BODY_LIMOUSINE   Advertisement_Body = 9
	Advertisement_BODY_LIGHTTRUCK  Advertisement_Body = 10
	Advertisement_BODY_OTHER       Advertisement_Body = 11
)

// Enum value maps for Advertisement_Body.
var (
	Advertisement_Body_name = map[int32]string{
		0:  "BODY_UNKNOWN",
		1:  "BODY_SEDAN",
		2:  "BODY_CROSSOVER",
		3:  "BODY_MINIVAN",
		4:  "BODY_HATCHBACK",
		5:  "BODY_WAGON",
		6:  "BODY_COUPE",
		7:  "BODY_CONVERTIBLE",
		8:  "BODY_PICKUP",
		9:  "BODY_LIMOUSINE",
		10: "BODY_LIGHTTRUCK",
		11: "BODY_OTHER",
	}
	Advertisement_Body_value = map[string]int32{
		"BODY_UNKNOWN":     0,
		"BODY_SEDAN":       1,
		"BODY_CROSSOVER":   2,
		"BODY_MINIVAN":     3,
		"BODY_HATCHBACK":   4,
		"BODY_WAGON":       5,
		"BODY_COUPE":       6,
		"BODY_CONVERTIBLE": 7,
		"BODY_PICKUP":      8,
		"BODY_LIMOUSINE":   9,
		"BODY_LIGHTTRUCK":  10,
		"BODY_OTHER":       11,
	}
)

func (x Advertisement_Body) Enum() *Advertisement_Body {
	p := new(Advertisement_Body)
	*p = x
	return p
}

func (x Advertisement_Body) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Advertisement_Body) Descriptor() protoreflect.EnumDescriptor {
	return file_core_v1_advertisement_proto_enumTypes[4].Descriptor()
}

func (Advertisement_Body) Type() protoreflect.EnumType {
	return &file_core_v1_advertisement_proto_enumTypes[4]
}

func (x Advertisement_Body) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Advertisement_Body.Descriptor instead.
func (Advertisement_Body) EnumDescriptor() ([]byte, []int) {
	return file_core_v1_advertisement_proto_rawDescGZIP(), []int{0, 4}
}

type Advertisement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Resource         string                   `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Brand            string                   `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	Model            string                   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Category         Advertisement_Category   `protobuf:"varint,5,opt,name=category,proto3,enum=core.v1.Advertisement_Category" json:"category,omitempty"`
	Title            string                   `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	IsVerified       bool                     `protobuf:"varint,7,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	Url              string                   `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	Price            uint32                   `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	ImageUrls        []string                 `protobuf:"bytes,10,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	LastSeenAt       *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=last_seen_at,json=lastSeenAt,proto3" json:"last_seen_at,omitempty"`
	PublishedAt      *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	ScrapedAt        *timestamppb.Timestamp   `protobuf:"bytes,13,opt,name=scraped_at,json=scrapedAt,proto3" json:"scraped_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp   `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Year             uint32                   `protobuf:"varint,15,opt,name=year,proto3" json:"year,omitempty"`
	Gearbox          Advertisement_Gearbox    `protobuf:"varint,16,opt,name=gearbox,proto3,enum=core.v1.Advertisement_Gearbox" json:"gearbox,omitempty"`
	WheelDrive       Advertisement_WheelDrive `protobuf:"varint,17,opt,name=wheel_drive,json=wheelDrive,proto3,enum=core.v1.Advertisement_WheelDrive" json:"wheel_drive,omitempty"`
	EngineCapacity   float64                  `protobuf:"fixed64,18,opt,name=engine_capacity,json=engineCapacity,proto3" json:"engine_capacity,omitempty"`
	Fuel             Advertisement_Fuel       `protobuf:"varint,19,opt,name=fuel,proto3,enum=core.v1.Advertisement_Fuel" json:"fuel,omitempty"`
	Mileage          uint32                   `protobuf:"varint,20,opt,name=mileage,proto3" json:"mileage,omitempty"`
	Body             Advertisement_Body       `protobuf:"varint,21,opt,name=body,proto3,enum=core.v1.Advertisement_Body" json:"body,omitempty"`
	IsCustomsCleared bool                     `protobuf:"varint,22,opt,name=is_customs_cleared,json=isCustomsCleared,proto3" json:"is_customs_cleared,omitempty"`
	Vin              string                   `protobuf:"bytes,23,opt,name=vin,proto3" json:"vin,omitempty"`
	Number           string                   `protobuf:"bytes,24,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *Advertisement) Reset() {
	*x = Advertisement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_core_v1_advertisement_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Advertisement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Advertisement) ProtoMessage() {}

func (x *Advertisement) ProtoReflect() protoreflect.Message {
	mi := &file_core_v1_advertisement_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Advertisement.ProtoReflect.Descriptor instead.
func (*Advertisement) Descriptor() ([]byte, []int) {
	return file_core_v1_advertisement_proto_rawDescGZIP(), []int{0}
}

func (x *Advertisement) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Advertisement) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Advertisement) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *Advertisement) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Advertisement) GetCategory() Advertisement_Category {
	if x != nil {
		return x.Category
	}
	return Advertisement_CATEGORY_UNKNOWN
}

func (x *Advertisement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Advertisement) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Advertisement) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Advertisement) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Advertisement) GetImageUrls() []string {
	if x != nil {
		return x.ImageUrls
	}
	return nil
}

func (x *Advertisement) GetLastSeenAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenAt
	}
	return nil
}

func (x *Advertisement) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Advertisement) GetScrapedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ScrapedAt
	}
	return nil
}

func (x *Advertisement) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Advertisement) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Advertisement) GetGearbox() Advertisement_Gearbox {
	if x != nil {
		return x.Gearbox
	}
	return Advertisement_GEARBOX_UNKNOWN
}

func (x *Advertisement) GetWheelDrive() Advertisement_WheelDrive {
	if x != nil {
		return x.WheelDrive
	}
	return Advertisement_WHEEL_DRIVE_UNKNOWN
}

func (x *Advertisement) GetEngineCapacity() float64 {
	if x != nil {
		return x.EngineCapacity
	}
	return 0
}

func (x *Advertisement) GetFuel() Advertisement_Fuel {
	if x != nil {
		return x.Fuel
	}
	return Advertisement_FUEL_UNKNOWN
}

func (x *Advertisement) GetMileage() uint32 {
	if x != nil {
		return x.Mileage
	}
	return 0
}

func (x *Advertisement) GetBody() Advertisement_Body {
	if x != nil {
		return x.Body
	}
	return Advertisement_BODY_UNKNOWN
}

func (x *Advertisement) GetIsCustomsCleared() bool {
	if x != nil {
		return x.IsCustomsCleared
	}
	return false
}

func (x *Advertisement) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *Advertisement) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

var File_core_v1_advertisement_proto protoreflect.FileDescriptor

var file_core_v1_advertisement_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x0e, 0x0a, 0x0d, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x12, 0x38, 0x0a, 0x07, 0x67, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x61,
	0x72, 0x62, 0x6f, 0x78, 0x52, 0x07, 0x67, 0x65, 0x61, 0x72, 0x62, 0x6f, 0x78, 0x12, 0x42, 0x0a,
	0x0b, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x57, 0x68, 0x65, 0x65, 0x6c,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x04, 0x66, 0x75,
	0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x46, 0x75, 0x65, 0x6c, 0x52, 0x04, 0x66, 0x75, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69,
	0x6c, 0x65, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x76, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb9,
	0x01, 0x0a, 0x04, 0x46, 0x75, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x55, 0x45, 0x4c, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x55, 0x45,
	0x4c, 0x5f, 0x47, 0x41, 0x53, 0x4f, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x46, 0x55, 0x45, 0x4c, 0x5f, 0x44, 0x49, 0x45, 0x53, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x47, 0x41, 0x53, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x46,
	0x55, 0x45, 0x4c, 0x5f, 0x47, 0x41, 0x53, 0x5f, 0x47, 0x41, 0x53, 0x4f, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x48, 0x59, 0x42, 0x52, 0x49,
	0x44, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x45, 0x4c, 0x45, 0x43,
	0x54, 0x52, 0x49, 0x43, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x55, 0x45, 0x4c, 0x5f, 0x50,
	0x52, 0x4f, 0x50, 0x41, 0x4e, 0x45, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x55, 0x45, 0x4c,
	0x5f, 0x4d, 0x45, 0x54, 0x48, 0x41, 0x4e, 0x45, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x55,
	0x45, 0x4c, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x09, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x47,
	0x65, 0x61, 0x72, 0x62, 0x6f, 0x78, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f,
	0x58, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x47,
	0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x4d, 0x41, 0x54, 0x49, 0x43,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x4d, 0x41,
	0x4e, 0x55, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f,
	0x58, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x54, 0x4f,
	0x52, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f, 0x41,
	0x4d, 0x54, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x47, 0x45, 0x41, 0x52, 0x42, 0x4f, 0x58, 0x5f,
	0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x06, 0x22, 0x67, 0x0a, 0x0a, 0x57, 0x68, 0x65, 0x65, 0x6c,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f, 0x44,
	0x52, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x45,
	0x41, 0x52, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f, 0x44, 0x52,
	0x49, 0x56, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x57,
	0x48, 0x45, 0x45, 0x4c, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x03,
	0x22, 0xd2, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f,
	0x43, 0x41, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52,
	0x59, 0x5f, 0x54, 0x52, 0x55, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x54, 0x4f, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x42, 0x55, 0x53, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x57, 0x41, 0x54, 0x45, 0x52,
	0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x41,
	0x49, 0x52, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59,
	0x5f, 0x43, 0x41, 0x4d, 0x50, 0x45, 0x52, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x54,
	0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x4c, 0x45, 0x52, 0x10, 0x08, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x41, 0x4c, 0x10, 0x09, 0x22, 0xe2, 0x01, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10,
	0x0a, 0x0c, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x53, 0x45, 0x44, 0x41, 0x4e, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x43, 0x52, 0x4f, 0x53, 0x53, 0x4f, 0x56,
	0x45, 0x52, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x4d, 0x49, 0x4e,
	0x49, 0x56, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x48,
	0x41, 0x54, 0x43, 0x48, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f,
	0x44, 0x59, 0x5f, 0x57, 0x41, 0x47, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f,
	0x44, 0x59, 0x5f, 0x43, 0x4f, 0x55, 0x50, 0x45, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x4f,
	0x44, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x07,
	0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x10,
	0x08, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x4f, 0x55, 0x53,
	0x49, 0x4e, 0x45, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x4f, 0x44, 0x59, 0x5f, 0x4c, 0x49,
	0x47, 0x48, 0x54, 0x54, 0x52, 0x55, 0x43, 0x4b, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x4f,
	0x44, 0x59, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x0b, 0x42, 0x8b, 0x01, 0x0a, 0x0b, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x72, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x43, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x07,
	0x43, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x43, 0x6f, 0x72, 0x65, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x08,
	0x43, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_core_v1_advertisement_proto_rawDescOnce sync.Once
	file_core_v1_advertisement_proto_rawDescData = file_core_v1_advertisement_proto_rawDesc
)

func file_core_v1_advertisement_proto_rawDescGZIP() []byte {
	file_core_v1_advertisement_proto_rawDescOnce.Do(func() {
		file_core_v1_advertisement_proto_rawDescData = protoimpl.X.CompressGZIP(file_core_v1_advertisement_proto_rawDescData)
	})
	return file_core_v1_advertisement_proto_rawDescData
}

var file_core_v1_advertisement_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_core_v1_advertisement_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_core_v1_advertisement_proto_goTypes = []interface{}{
	(Advertisement_Fuel)(0),       // 0: core.v1.Advertisement.Fuel
	(Advertisement_Gearbox)(0),    // 1: core.v1.Advertisement.Gearbox
	(Advertisement_WheelDrive)(0), // 2: core.v1.Advertisement.WheelDrive
	(Advertisement_Category)(0),   // 3: core.v1.Advertisement.Category
	(Advertisement_Body)(0),       // 4: core.v1.Advertisement.Body
	(*Advertisement)(nil),         // 5: core.v1.Advertisement
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_core_v1_advertisement_proto_depIdxs = []int32{
	3, // 0: core.v1.Advertisement.category:type_name -> core.v1.Advertisement.Category
	6, // 1: core.v1.Advertisement.last_seen_at:type_name -> google.protobuf.Timestamp
	6, // 2: core.v1.Advertisement.published_at:type_name -> google.protobuf.Timestamp
	6, // 3: core.v1.Advertisement.scraped_at:type_name -> google.protobuf.Timestamp
	6, // 4: core.v1.Advertisement.updated_at:type_name -> google.protobuf.Timestamp
	1, // 5: core.v1.Advertisement.gearbox:type_name -> core.v1.Advertisement.Gearbox
	2, // 6: core.v1.Advertisement.wheel_drive:type_name -> core.v1.Advertisement.WheelDrive
	0, // 7: core.v1.Advertisement.fuel:type_name -> core.v1.Advertisement.Fuel
	4, // 8: core.v1.Advertisement.body:type_name -> core.v1.Advertisement.Body
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_core_v1_advertisement_proto_init() }
func file_core_v1_advertisement_proto_init() {
	if File_core_v1_advertisement_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_core_v1_advertisement_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Advertisement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_core_v1_advertisement_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_core_v1_advertisement_proto_goTypes,
		DependencyIndexes: file_core_v1_advertisement_proto_depIdxs,
		EnumInfos:         file_core_v1_advertisement_proto_enumTypes,
		MessageInfos:      file_core_v1_advertisement_proto_msgTypes,
	}.Build()
	File_core_v1_advertisement_proto = out.File
	file_core_v1_advertisement_proto_rawDesc = nil
	file_core_v1_advertisement_proto_goTypes = nil
	file_core_v1_advertisement_proto_depIdxs = nil
}
